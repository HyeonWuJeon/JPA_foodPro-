# DB init
database=h2
spring.datasource.platform=h2
spring.datasource.data=classpath*:db/${database}/data.sql
#스크립트에 문제가 발생하면 어플리케이션 동작이 실패하므로 false -> true 로 변경
spring.datasource.continue-on-error=true
spring.datasource.initialization-mode=never
# JDK proxy lib
#spring.aop.proxy-target-class=false
#cglib
#spring.aop.proxy-target-class=true
#spring.batch.initialize-schema=always
#server.servlet.session.persistent=true

spring.session.store-type=jdbc
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.sql-script-encoding=UTF-8
spring.jpa.hibernate.ddl-auto=create



spring.datasource.url=jdbc:h2:tcp://localhost/~/foodPro
spring.datasource.username=sa
spring.datasource.password=1234


spring.datasource.driver-class-name=org.h2.Driver

spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/
spring.resources.add-mappings=true

#즉시적용
spring.devtools.livereload.enabled=true

#캐시 false / HTML
spring.thymeleaf.mode=HTML
spring.freemarker.cache=false
spring.thymeleaf.cache=false

spring.profiles.include=

#spring.jpa.properties.hibernate.enable_lazy_load_no_trans= true // anti pattern
##Logging

spring.output.ansi.enabled= always
#logging.level.org.springframework.web=trace
#logging.level.org.springframework.boot=trace
#logging.level.org.springframework.sql= info
#logging.level.com.foodPro= trace
#logging.level.org.springframework.security=trace
